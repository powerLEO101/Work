*填写姓名
安装git了以后还要填写姓名/邮箱，为每次提交的姓名/邮箱，命令为：
git config --global user.email "你的邮箱"
git config --global user.name "你的名字"
*新建仓库
新建一个文件夹，在该文件夹内输入git init即可把这个文件夹变成一个仓库
*操作的提交
在仓库里的操作每次都要提交，如果没有提交在命令行的左边会有一个黄色的“×”
提交命令：
	git add *** 表示修改或新建了一个文件，文件名为***
	git rm ***  表示删除了一个文件，文件名为***
注意：以上命令均要在已经修改后输入，否则会报错
提交后发现命令行左边还是有一个黄色的“×”，因为每次提交还要完成，完成命令：
	git commit -m "对本次完成的注释"
*查看仓库的提交记录
命令：
	git log 表示查看之前所有的提交，每一次的提交格式应该是这样的：
	第一行：提交的编号，一窜和乱码类似的东西，但还是有用的。
	第二行：提交的作者，之前提交的作者
	第三行：提交的日期，日期很详细，甚至连时区都有
	第四行：提交的注释，直接用commit -m 写的注释。
	注意：git log 还可以再后面加上参数  --pretty=oneline这样就只会显示编号和注释
*恢复仓库至之前的版本
命令：
	git reset --hard *** 表示回复到之前的版本，其中的***可以为之前git log上看到的版本编号(可以只写版本号的前几位，但不能太少，这个命令也是可以回到未来的版本的)，也可以为HEAD^，加一个“^”表示回退一个版本，加两个表示回退两个版本，如果要回退很多次，可以改为HEAD~x ,表示回退x个版本，x自己定。

*查看所有的提交记录（回退也算）
命令：
	git reflog  表示查看所有的记录，包括回退，好处是回退了以后用git log是看不到之前的记录的，用这个就能看到了。
*删除文件
命令： git rm *** 表示在工作区中删除了***
*远程仓库
注意！！！！这才是重头戏！！！！！
远程仓库使用github,github是用于辅助git的。
首先，github需要知道你的公开SSH秘钥，安装SSH代码：
	ssh-keygen -t rsa -C "邮箱" 表示添加一个SSH，这并不是git的语法，然后在~/.ssh里会看到两个东西，一个为id_rsa这个为私密SSH，千万不能泄露给别人，另外一个为id_rsa.pub这个是公开SSH，可以告诉别人，用来验证身份。
为电脑添加完SSH后，就需要到github上添加你的SSH，复制公开秘钥里的所有东西，然后到github里，settings->SSH and GPG key's，添加一个SSH，标题自拟，内容就是刚刚复制的。
添加完SSH后，就在自己电脑的git仓库里输入代码：
	git remote add origin git@github.com:用户名/项目名.git
这段代码表示这个git仓库和刚刚输入的项目名同步（项目要提前在github上新建好）。
然而，这个同步并不是直接同步，这也是需要提交（不是提交到在暂存区）至github才能同步的，提交代码为：
	git push -u origin master 表示把这个文件夹里的所有东西都同步到github上，那个-u只有在第一次提交时要加，以后就不用了。
在第一次提交时github时git会问，确认这是github官网?（英文），直接输入yes。
由于这个版本库可以多人使用（只有确认了SSH才能使用），所以有时候版本库在github上更新了，但在本机没有，这样回到只本机提交至云端时会出错，就要使用命令：
	git pull origin master 表示将云端上的代码同步到本机来。
然后就可以提交了。
